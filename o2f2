#!/usr/bin/perl
use JSON::MaybeXS ();
use OracleXML;
use Policy;
use strict;
use Data::Dumper::Concise;

my $json = JSON::MaybeXS->new(utf8 => 1, pretty => 1, sort_by => 1);

foreach my $file (@ARGV) {
  warn "processing $file\n";
  my $oracle=OracleXML->new($file);

  foreach my $policy (@{$oracle->GetPolicies}) {
    my $jconfig = {
      active              => JSON::MaybeXS::true,
      description         => "AutoGenerated",
      applicationName     => "iPlanetAMWebAgentService",
      resourceTypeUuid    => "feb3490d-5f5e-4413-ace8-b76ad5bdf172",
      name                => $policy->Path,
      resources           => $policy->Resources,
      subject             => $policy->Subjects,
      condition           => $policy->Conditions,
      actionValues        => $policy->ActionValues,
      resourceAttributes  => $policy->ResourceAttributes,
    };

    map {delete $jconfig->{$_} if not $jconfig->{$_};} $jconfig;

    my $host=$oracle->URL;
    $host=~s/\//!/g;
    $host=~s/!$//;
# host is the appID with /->! and ending ! removed
# or authhost and if ctx has something other than /, /->! append


    my $env=$oracle->Lane; # prod dev etc..

    #my $filename=$oracle->AppID=~s/\//_/rg;
    my $path="json/$host/$env";

    my $policyname=$policy->Name;
    $policyname=~s/\//!/g;
    $policyname="#" if $policyname eq "default";
    my $output="$path/${env}_${host}_${policyname}.json";
  #  $output=~s/__/_/g;
    warn "writing $output\n";
    $output=lc($output);

    `mkdir -p $path`;
    open my $fh,">",$output;
    #print $json->encode($jconfig);
    print $fh $json->encode($jconfig);
    close $fh;
  }
}

__END__
